<div class="well">
    <h3>Hunter</h3>
    <p> A distributed logging platform </p>
</div>
<div class="row">
    <div class="col-md-12" id="messages">
        <div class="col-md-12 filters-container">
            <form class="form-inline">
                <div class="form-group">
                    <button class="btn btn-primary"><span class="glyphicon glyphicon-trash"></span></button>
                </div>

                <div class="form-group">
                    <input type="text" class="form-control filters datepicker" placeholder="Start Date" />
                </div>

                <div class="form-group">
                    <input type="text" class="form-control filters datepicker" placeholder="Ending Date" />
                </div>

                <div class="form-group">
                    <input type="text" class="form-control filters" placeholder="Category" />
                </div>

                <div class="form-group">
                    <input type="text" class="form-control filters" placeholder="Sub category" />
                </div>

                <div class="form-group">
                    <input type="text" class="form-control filters" placeholder="Pattern" />
                </div>

                <div class="form-group">
                    <button class="btn btn-primary"><span class="glyphicon glyphicon-search"></span> Search</button>
                </div>

            </form>    
           
        </div>
       <table class="table table-striped" id="logstable">
           <thead>
               <tr>
                   <th>Date</th>
                   <th>Level</th>
                   <th>AppId</th>
                   <th>Category</th>
                   <th>Sub Category</th>
                   <th>Message</th>
               </tr>
           </thead>
           <tbody>
             
           </tbody>
       </table>
    </div>   
</div>


@section scripts{
    <script type="text/javascript">

        $(function () {

            var connection = $.connection("/realtimelogs");
            connection.received(function (data) {
                var logObject = JSON.parse(data);
                console.log(data);
                var logClass = getLogClass(logObject.LogLevel);
                var logEntry = '<tr class="' + logClass + '">';
                logEntry += '<td>'+logObject.LoggingDate + '</p>';
                logEntry += '<td>' + logObject.LogLevel + '</td>';
                logEntry += '<td>' + logObject.ApplicationId + '</td>';
                logEntry += '<td>' + logObject.Category + '</td>';
                logEntry += '<td>' + logObject.Subcategory + '</td>';
                logEntry += '<td>' + logObject.LogMessage + '</td>';
                logEntry += '</tr>';  


                //var logMessage = '[' + logObject.LoggingDate + '] ' + '[' + logObject.LogCategorization + '] ' + logObject.LogMessage + ' Category: ' +
                    //logObject.Category + ', SubCategory: ' + logObject.Subcategory + ' ApplicationId: ' + logObject.ApplicationId;

                $('#logstable tbody').append(logEntry);
            })

            connection.start().done(function () {              
                //$('#messages').append('<p>Logs Connection established<p>');
                console.log('Logs Connection established');
            });

            $('.datepicker').datepicker();
        });

        function getLogClass(logLevel) {
            logLevel = logLevel.toLowerCase();


            if (logLevel == 'error')
                return 'danger';
            else if (logLevel == 'info')
                return '';
            else if (logLevel == 'warning')
                return 'warning';
        }

        function LogsViewModel(){
            var self = this;

            this.logs = ko.observableArray([]);
        }
    </script>

}